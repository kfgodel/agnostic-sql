package ar.com.kfgodel.asql;

import ar.com.dgarcia.javaspec.api.JavaSpec;
import ar.com.dgarcia.javaspec.api.JavaSpecRunner;
import ar.com.kfgodel.asql.api.Vendor;
import ar.com.kfgodel.asql.api.interpreter.VendorInterpreter;
import ar.com.kfgodel.asql.impl.interpreter.TemplateInterpreter;
import ar.com.kfgodel.asql.impl.model.create.ColumnDeclarationModel;
import ar.com.kfgodel.asql.impl.model.create.CreateModel;
import ar.com.kfgodel.asql.impl.model.create.TableConstraintModel;
import ar.com.kfgodel.asql.impl.value.ExplicitValueModel;
import org.junit.runner.RunWith;

import static org.assertj.core.api.Assertions.assertThat;

/**
 * This test verifies the behavior of a create model
 * Created by kfgodel on 13/07/15.
 */
@RunWith(JavaSpecRunner.class)
public class CreateModelTest extends JavaSpec<AsqlTestContext> {
    @Override
    public void define() {
        describe("an agnostic create statement model", () -> {

            context().createModel(()->{
                CreateModel createModel = CreateModel.create("POSA_ESTADO_DE_LIQUIDACION");
                createModel.addDeclaration(ColumnDeclarationModel.create("id","bigint generated by default as identity (start with 1)"));
                createModel.addDeclaration(ColumnDeclarationModel.create("persistenceVersion","bigint"));
                createModel.addDeclaration(ColumnDeclarationModel.create("momentoDeUltimaModificacion","timestamp"));
                createModel.addDeclaration(ColumnDeclarationModel.create("diasPorLiquidar","integer").withNullity("NOT NULL"));
                createModel.addDeclaration(ColumnDeclarationModel.create("cantidad","integer").withNullity("NOT NULL").withDefaultValue(ExplicitValueModel.create(0)));
                createModel.addConstraint(TableConstraintModel.create("primary key (id)"));
                return createModel;
            });

            it("can be translated to a vendor specific statement",()->{

                VendorInterpreter interpreter = TemplateInterpreter.create(Vendor.ansi());

                String translatedSql = interpreter.translate(context().createModel());

                assertThat(translatedSql).isEqualTo("CREATE TABLE POSA_ESTADO_DE_LIQUIDACION (\n" +
                        "\tid bigint generated by default as identity (start with 1), \n" +
                        "\tmomentoDeCreacion timestamp, \n" +
                        "\tmomentoDeUltimaModificacion timestamp, \n" +
                        "\tpersistenceVersion bigint, \n" +
                        "\tdiasPorLiquidar integer not null, \n" +
                        "\testado varchar(255), primary key (id)\n" +
                        ");");
            });

        });

    }
}